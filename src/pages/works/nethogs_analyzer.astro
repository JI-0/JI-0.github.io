---
import Layout from '../../layouts/Layout.astro';
import { Code } from 'astro:components';
const pageTitle = "Nethogs analyzer";
---
<Layout pageTitle={pageTitle}>
    <div class="gif">
        <img class="main-img" width="500" height="259" alt="NethogsAnalyzer" src="/nethogs-analyzer.png"/>
    </div>
    <h1>Nethogs analyzer</h1>
    <small>Go/Golang</small>
    <small>Script</small>
    <small>Networking</small>
    <p></p>
    <!-- <a href="https://the.testingwebrtc.com/lb" target="_blank"><button><img width="20" height="20" src="/live.svg"/> Live demo</button></a> -->
    <a href="https://github.com/JI-0/Net-analyzer-for-Nethogs-to-.csv" target="_blank"><button><img width="20" height="20" src="/github-mark.svg"/> GitHub</button></a>
    <h2>Task</h2>
    <p>
        As part of my research at Sophia university (上智大学) I had to create a script that would help me create network traffic 
        data needed to create analysis of how much data each application running on the Linux server was taking up.
    </p>
    <p>
        Full paper available <a href="https://github.com/JI-0/WebRTC-Dummy-Client/blob/master/paper/Utilizing%20the%20WebRTC%20P2P%20protocol%20to%20reduce%20infrastructure%20costs%20of%20media%20streaming.pdf"><button type="button">here</button></a>
    </p>
    <h2 data-aos="fade-in" data-aos-delay="300">Solution</h2>
    <p data-aos="fade-in" data-aos-delay="300">
        I decided to create a simple script in Go, which would take in the raw text data generated by Nethogs (available 
        <a href="https://github.com/raboof/nethogs">here</a>) and streamed into a text file using the sed text editor 
        with the following command:
    </p>
    <div data-aos="fade-in" data-aos-delay="300">
        <Code data-aos="fade-in" data-aos-delay="300" code={`
     sudo nethogs -t -d 1 | sed 's/[^[:print:][:cntrl:]]//g' > in.txt
        `} lang="bash" />
    </div>
    <p data-aos="fade-in" data-aos-delay="300">
        The script takes in the .txt file and transforms it into a .csv file which can later be used in programs such as 
        LibreOffice Spreadsheet or Excel for further processing or visualization. As Nethogs with the above command is 
        configured to take a snapshot every second, we get a per second frame of the network situation. The script can 
        produce either a per process data file or a sum of all processes per second file.
    </p>
    <h2 data-aos="fade-in" data-aos-delay="300">Demo</h2>
    <p data-aos="fade-in" data-aos-delay="300">
        The project is publicly available on GitHub <a href="https://github.com/JI-0/Net-analyzer-for-Nethogs-to-.csv">here</a>.
    </p>
    <p data-aos="fade-in" data-aos-delay="300">
        As a demonstration, please refer to the images below. The first image shows the .txt file created with Nethogs, which is 
        the input for this script:
    </p>
    <div data-aos="fade-in" data-aos-delay="300" class="gif">
        <img class="main-img" width="500" height="259" alt="NethogsAnalyzer" src="/nethogs-analyzer.png"/>
    </div>
    <p data-aos="fade-in" data-aos-delay="300">
        After the processing, the script generates the following .csv file:
    </p>
    <div data-aos="fade-in" data-aos-delay="300" class="gif">
        <img class="main-img" width="500" height="259" alt="NethogsAnalyzer" src="/nethogs-analyzer-results.png"/>
    </div>
    <p data-aos="fade-in" data-aos-delay="300">
        Please feel free to take a look and try out the script!
    </p>
    <!-- <a href="https://the.testingwebrtc.com/lb" target="_blank"><button><img width="20" height="20" src="/live.svg"/> Live demo</button></a> -->
    <a data-aos="fade-in" data-aos-delay="300" href="https://github.com/JI-0/Net-analyzer-for-Nethogs-to-.csv" target="_blank"><button><img width="20" height="20" src="/github-mark.svg"/> GitHub</button></a>
</Layout>
<style>
    /* Main image */
    .main-img {
        background-color: white;
        border-radius: 8px;
    }

    @media (max-width: 600px) {
        .main-img {
            width: 300px;
            height: 155px;
        }
    }

    /* small */
    small {
        background-color: #584966;
        color: #fdebf3;
        border-radius: 6px;
        font-family: 'Josefin Sans', sans-serif;
        font-weight: 600;
        padding: 0.3em 0.6em 0.2em;
    }

    /* Button */
    button {
        height: 40px;
        background-color: white;
        border: 2px solid red;
        border-radius: 8px;
        color: black;
        font: 600 16px 'Josefin Sans', sans-serif;
        padding: 8px 16px;
        transition: background-color 0.4s, color 0.4s;
    }

    button:hover {
        background-color: gray;
        color: red;
    }
</style>
